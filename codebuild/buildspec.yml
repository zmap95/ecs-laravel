version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - AWS_DEFAULT_REGION=ap-northeast-1
      - AWS_ACCOUNT_ID=051910502774
      - IMAGE_REPO_NAME=genken-prod-cms
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME"
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the env...
      - cp -rf $CODEBUILD_SRC_DIR_ApiDef/code-build/.env.prod $CODEBUILD_SRC_DIR_ApiDef/src/.env
      - ls -al
      - echo Building the Docker image...
      - make build_base
      - make build_php
      - docker ps
      # - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      # - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $IMAGE_URI:$IMAGE_TAG      
  post_build:
    commands:
      - echo Build completed on `date`
      # - echo Pushing the Docker image...
      # - docker push $IMAGE_URI:$IMAGE_TAG
      #- printf '[{"name":"%s","imageUri":"%s"}]' "workspace" "$IMAGE_URI:$IMAGE_TAG" > imagedefinitions.json
      # - printf '{"Version":"1.0","ImageURI":"%s"}' "$IMAGE_URI:$IMAGE_TAG" > imageDetail.json
artifacts:
    files: 
      - imageDetail.json